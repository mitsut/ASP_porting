<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_x5q_5dd_zh">
 <title>クリティカルセクションの出入処理の実現に関する制約</title>
 <shortdesc></shortdesc>
 <conbody>
  <p>カーネル内で用いるクリティカルセクションの出入処理を実現する場合には， 次の2つの条件を満たすように実装しなければならない．</p>
  <p>(1-6-1) 出入処理から抜けた時点では，割込みの禁止／許可が完了していなけ ればならない．例えば，割込み禁止／許可命令を実行してから実際に割込みが
   禁止／許可されるまで何命令か遅延するプロセッサの場合には，出入処理の中 にNOP命令を入れるなどの方法で，出入処理を抜けた時点では，割込みが禁止／
   許可された状態になっていることを保証しなければならない． </p>
  <p>(1-6-2) メモリ上のデータ構造が書き変わる可能性があることを，何らかの方 法でコンパイラに知らせなければならない．GNU開発環境では，次のいずれかの
   方法でこの制約を満たすことができる．</p>
  <p>(a) クリティカルセクションの出入処理の全体または出入処理の本質的な部分 （具体的には，割込み禁止／許可する処理）を（インラインでない）通常 の関数により実現する． </p>
  <p>(b) クリティカルセクションの出入処理の本質的な部分をインラインアセンブ ラによって実現している場合には，そのインラインアセンブラのclobber変 数リストに"memory"を追加する． </p>
  <p>(c) クリティカルセクションの出入処理の本質的な部分が，マクロやインライ ン関数呼出しで実現している場合には，クリティカルセクションに入る処
   理の最後と出る処理の先頭に，Asm("":::"memory")という記述を入れる． </p>
  <p>このような制約を設ける理由については，「TOPPERS/ASPカーネル 設計メモ」 の「カーネルのデータ構造に対するvolatile宣言について」の節を参照するこ と． </p>
  <p/>
 </conbody>
</concept>
